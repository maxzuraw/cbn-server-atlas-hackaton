{\rtf1\ansi\ansicpg1250\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Palatino-Roman;\f2\froman\fcharset0 Palatino-Bold;
\f3\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red88\green118\blue71;}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c34510\c46275\c27843;}
\deftab1200
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab1200\sl262\slmult1\sb260\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs56 Temperature sensors\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!$Scr_Ps::0>
\f1\fs26 \
Sensors are build on ESP8266 boards with DS18B20 temperature sensor. Building temperature sensor is pretty easy, especially when following pretty good todos just like tutorials like this: {\field{\*\fldinst{HYPERLINK "https://randomnerdtutorials.com/esp8266-ds18b20-temperature-sensor-web-server-with-arduino-ide/"}}{\fldrslt https://randomnerdtutorials.com/esp8266-ds18b20-temperature-sensor-web-server-with-arduino-ide/}} .\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab1200\sl262\slmult1\sb260\partightenfactor0

\f0\fs24 \cf0 <$Scr_H::1><$Scr_Ps::1>
\f2\b\fs36 Using https\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b0\fs24 \cf0 <!$Scr_H::1><!$Scr_Ps::1>
\f1\fs26 It\'92s a bit tricky, when we want to send temperature measurements to https server. You will have to copy SHA-1 fingerprint from certificate information. Then use it with HttpsClient inside Arduino code. Please take a look at following fragment:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs24 \cf2 \cb3 const char\cf4  fingerprint[] PROGMEM \cf2 = \cf5 "6E A8 53 53 63 59 45 B4 9D A2 9E F9 2F 25 6C C8 48 B0 AD 9B"\cf4 ;\
\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs26 \cf0 \cb1 Use it without SHA-1 dashes.\
And then we have to call:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs24 \cf4 \cb3 httpsClient.setFingerprint(fingerprint);\
\
}